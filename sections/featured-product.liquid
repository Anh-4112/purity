{%- liquid
  assign theme_st = settings
  assign section_st = section.settings
  assign product = section_st.product
  assign color_swatch_trigger = theme_st.color_swatch_trigger
  assign first_3d_model = product.media | where: 'media_type', 'model' | first
  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width px-20'
  else
    assign section_width = 'fluid_container'
  endif
  assign column_gap_slide = 0
  if section_st.column_gap == 'large'
    assign column_gap_slide = 30
  elsif section_st.column_gap == 'medium'
    assign column_gap_slide = 20
  elsif section_st.column_gap == 'small'
    assign column_gap_slide = 10
  endif
-%}
{%- capture style -%}
  --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};{{- -}}
  {% if column_gap_slide < 20 %}--gap: {{ column_gap_slide }}px;{% else %}--gap: 15px;--gap-desktop: {{  column_gap_slide }}px;{% endif %}{{- -}}
{%- endcapture -%}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link
    id="ModelViewerStyle"
    rel="stylesheet"
    href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
    media="print"
    onload="this.media='all'"
  >
  <link
    id="ModelViewerOverride"
    rel="stylesheet"
    href="{{ 'component-model-viewer-ui.css' | asset_url }}"
    media="print"
    onload="this.media='all'"
  >
{% endif %}
<section
  id="Product-{{ section.id }}"
  class="section section__featured-product"
  style="{{ style | strip | strip_newlines }}"
>
  <div class="{{ section_width }}">
    <div class="featured-product">
      {% if product.media.size > 0 %}
        <div class="product-detail__media">
          {% liquid
            assign option_color_name = 'Color'
            if color_swatch_trigger != blank
              assign option_color_name = color_swatch_trigger | split: ','
            endif
            assign position = 1
            for opt in product.options_with_values
              for color_trigger_name in option_color_name
                if opt.name == color_trigger_name
                  assign position = opt.position
                endif
              endfor
            endfor
            assign default_color_option = ''
            if position == 1
              assign default_color_option = product.selected_or_first_available_variant.option1
            elsif position == 2
              assign default_color_option = product.selected_or_first_available_variant.option2
            elsif position == 3
              assign default_color_option = product.selected_or_first_available_variant.option3
            endif
            assign media = product.media
            if product.metafields.custom.use_variants_image_group != blank and product.metafields.custom.use_variants_image_group
              assign alt_tags = ''
              assign first = true
              for image in product.media
                if image.alt != blank
                  assign exclude_image = false
                  for option in product.options_with_values
                    for value in option.values
                      if image.alt == value
                        assign exclude_image = true
                      endif
                    endfor
                  endfor
                  if exclude_image == false
                    if first
                      assign alt_tags = image.alt
                      assign first = false
                    else
                      assign alt_tags = alt_tags | append: ', ' | append: image.alt
                    endif
                  endif
                endif
              endfor
              assign variant_media = product.media | where: 'alt', default_color_option
              assign alt_tags_list = alt_tags | split: ', '
              assign other_media = ''
              assign added_alts = ''
              for image in product.media
                for alt_tag in alt_tags_list
                  if image.alt == alt_tag
                    if added_alts contains alt_tag
                    else
                      assign other_media = other_media | append: image.alt | append: ','
                      assign added_alts = added_alts | append: alt_tag | append: ','
                    endif
                  endif
                endfor
              endfor
              assign combined_media = variant_media
              assign other_media_array = other_media | split: ','
              for alt_tag in other_media_array
                assign media_to_add = product.media | where: 'alt', alt_tag
                assign combined_media = combined_media | concat: media_to_add
              endfor
              assign media = combined_media
            endif
            if media.size == 0
              assign media = product.media
            endif
          %}
          {% render 'media-gallery',
            images: media,
            section_st: section_st,
            product: product,
            section: section,
            type_section: 'featured'
          %}
        </div>
      {% endif %}
      <div class="product-detail__information">
        <div class="sticky top-20">
          {% content_for 'blocks', closest.product: product %}
          <a
            {% if product == blank %}
              role="link" aria-disabled="true"
            {% else %}
              href="{{ product.url }}"
            {% endif %}
            aria-label="{{ 'products.product.view_full_details' | t }}"
            class="mt-25 product-singe__view-all-button heading_weight heading-color inline-flex align-center gap-5 no-underline lh-normal"
          >
            {{ 'products.product.view_full_details' | t }}
            {% if settings.rtl %}
              <svg width="12" height="9" fill="none">
                <path fill="#111" d="M4.717 8.783c.152.14.334.211.545.211.199 0 .369-.07.51-.21A.724.724 0 0 0 6 8.255a.688.688 0 0 0-.229-.527L2.555 4.494 5.77 1.277A.688.688 0 0 0 6 .75a.688.688 0 0 0-.229-.527.669.669 0 0 0-.51-.229.744.744 0 0 0-.544.229L.973 3.967a.744.744 0 0 0-.229.545c0 .199.076.369.229.51l3.744 3.761Zm5.256 0c.14.14.316.211.527.211.21 0 .387-.07.527-.21a.724.724 0 0 0 .229-.528.688.688 0 0 0-.229-.527L7.811 4.494l3.216-3.217a.688.688 0 0 0 .229-.527.688.688 0 0 0-.229-.527.688.688 0 0 0-.527-.229.688.688 0 0 0-.527.229L6.229 3.967A.744.744 0 0 0 6 4.512c0 .199.076.369.229.51l3.744 3.761Z"/>
              </svg>
            {% else %}
              <svg width="12" height="9" fill="none">
                <path fill="currentColor" d="M7.283 8.783a.776.776 0 0 1-.545.211c-.199 0-.369-.07-.51-.21A.724.724 0 0 1 6 8.255c0-.211.076-.387.229-.527l3.216-3.235L6.23 1.277A.688.688 0 0 1 6 .75c0-.21.076-.387.229-.527a.669.669 0 0 1 .51-.229c.21 0 .392.076.544.229l3.744 3.744a.744.744 0 0 1 .229.545c0 .199-.076.369-.229.51L7.283 8.782Zm-5.256 0a.715.715 0 0 1-.527.211.715.715 0 0 1-.527-.21.724.724 0 0 1-.229-.528c0-.211.076-.387.229-.527l3.216-3.235L.973 1.277A.688.688 0 0 1 .744.75C.744.54.82.363.973.223A.688.688 0 0 1 1.5-.006c.21 0 .387.076.527.229l3.744 3.744A.744.744 0 0 1 6 4.512c0 .199-.076.369-.229.51L2.027 8.782Z"/>
              </svg>
            {% endif %}
          </a>
        </div>
      </div>
    </div>
  </div>
  {%- unless product.has_only_default_variant -%}
    <script type="application/json" class="productVariantsQty">
      [
      {%- for variant in product.variants -%}
        {%- assign op = variant.option1 | replace: '"', '\"' -%}
        {%- liquid
            assign id = '"id":' | append: variant.id
            assign option = '"option":"' | append: op | append: '"'
            assign quantity = '"qty":' | append: variant.inventory_quantity
            assign available = '"available":' | append: variant.available
            assign mamagement = '"mamagement":"' | append: variant.inventory_management | append: '"'
        -%}
        { {{ id }},{{ option }},{{ quantity }},{{ available }},{{ mamagement }}}
        {%- unless forloop.last -%},{%- endunless forloop.last -%}
      {%- endfor -%}
      ]
    </script>
  {%- endunless -%}
  {%- if first_3d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {% endif %}
</section>
{% schema %}
{
  "name": "t:sections.featured-product.name",
  "tag": "section",
  "class": "section section-featured-product",
  "blocks": [
    { "type": "@app" },
    { "type": "_badges-product" },
    { "type": "_price-product" },
    { "type": "_description-product" },
    { "type": "_title-product" },
    { "type": "_rating-product" },
    { "type": "_text-product" },
    { "type": "_buy-buttons" },
    { "type": "_variant-picker" },
    { "type": "_inventory-status" },
    { "type": "_product-meta" },
    { "type": "_collapsible-row" },
    { "type": "_custom-liquid" },
    { "type": "_share-product" },
    { "type": "_highlights-product" },
    { "type": "_key-features-product" },
    { "type": "_promotion-alert-product" },
    { "type": "_icon-with-text-product" },
    { "type": "_ask-question-product" },
    { "type": "_media-lightbox-product" },
    { "type": "_promotion-countdown-product" }
  ],
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "product",
      "id": "product",
      "label": "t:sections.featured-product.settings.product"
    },
    {
      "type": "select",
      "id": "column_gap",
      "options": [
        {
          "value": "no_gap",
          "label": "t:sections.all.padding.column_gap.no_gap"
        },
        {
          "value": "small",
          "label": "t:sections.all.padding.column_gap.small"
        },
        {
          "value": "medium",
          "label": "t:sections.all.padding.column_gap.medium"
        },
        {
          "value": "large",
          "label": "t:sections.all.padding.column_gap.large"
        }
      ],
      "default": "medium",
      "label": "t:sections.all.padding.column_gap.label"
    },
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "default": true,
      "label": "t:sections.main-product.settings.enable_image_zoom.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_autoplay.label",
      "info": "t:sections.main-product.settings.enable_video_autoplay.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 48
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured-product.name",
      "blocks": [
        { "type": "_title-product" },
        { "type": "_price-product" },
        { "type": "_description-product" },
        { "type": "_variant-picker" },
        { "type": "_inventory-status" },
        { "type": "_buy-buttons" }
      ]
    }
  ]
}
{% endschema %}
