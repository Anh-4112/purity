{%- liquid
  assign section_st = section.settings
  assign section_width = section_st.section_width
  assign border_height = section_st.border_height
  assign border_color = section_st.border_color
  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width'
  else
    assign section_width = 'fluid_container'
  endif
-%}
{%- style -%}
  .sec__divider-inner {
    border-bottom: var(--border-height) solid var(--border-color);
  }
{%- endstyle -%}
<div class="section sec__divider{{ reset_spacing }}">
  <div class="{{ section_width }}">
    <div
      class="sec__divider-inner"
      style="--border-height: {{ border_height }}px; --border-color: {{ border_color }}"
    ></div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.divider.name",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "range",
      "id": "border_height",
      "min": 1,
      "max": 20,
      "step": 1,
      "unit": "px",
      "default": 1,
      "label": "t:sections.divider.settings.height.label"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "t:sections.divider.settings.color.label",
      "default": "#ebebeb"
    }
  ],
  "presets": [
    {
      "name": "t:sections.divider.name"
    }
  ]
}
{% endschema %}
