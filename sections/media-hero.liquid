{% liquid
  assign theme_st = settings
  assign section_st = section.settings
  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width'
  else
    assign section_width = 'fluid_container'
  endif
  assign desktop_content_position = section_st.desktop_content_position
  assign overlay_opacity = section_st.overlay_opacity
  assign video_local = section_st.video_local
  assign image = section_st.image
%}
{%- capture style -%}
  --overlay-opacity: {{ overlay_opacity }}%; --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};
{%- endcapture -%}
{%- capture sizes -%}
  {% if section_st.full_width -%}
    100vw
  {%- else -%}
    (min-width: {{ theme_st.page_width }}px) {{ theme_st.page_width | minus: 100 }}px, (min-width: 750px)
    calc(100vw - 10rem), 100vw
  {%- endif %}
{%- endcapture -%}
{%- capture style_ratio -%}
  {% if image != blank %}--aspect-ratio: {{ image.aspect_ratio }};{% else %}--aspect-ratio: 5/2;{% endif %}
{%- endcapture -%}
{%- style -%}
  .section__media-hero-content {
    margin-block-start: -66vh;
  }
  .section__media-hero .media__content .banner__box {
    padding-block: 50vh 25vh;
  }
  .section__media-hero .media__content .shopify-block {
    margin-block-start: 0;
    padding-block-end: 33vh;
  }
  .section__media-hero .h-full_screen {
    height: 100vh;
  }
{%- endstyle -%}
<div
  id="{{ section.id }}"
  class="color-{{ section_st.color_scheme }} section section__media-hero"
  style="{{ style | strip | strip_newlines }}"
>
  <div
    class="{{ section_width }}"
  >
    <div class="relative">
      {%- if video_local == null and image != null -%}
        <div
          class="banner__media absolute sticky inset-0{% if section_width != "full-width" %} rounded{% endif %} h-full_screen"
          style="{{ style_ratio | strip | strip_newlines }}"
        >
          {%- liquid
            assign alt_default = 'accessibility.promotion_banner' | t
            assign alt = section_st.banner_image.alt | default: alt_default | escape
          -%}
          {% render 'responsive-image',
            type: 'banner',
            container: section_st.section_width,
            image: image,
            image_alt: alt
          %}
        </div>
      {%- elsif video_local != null -%}
        <video-local
          class="block video-section sticky w-full banner__media inset-0{% if section_width != "full-width" %} rounded{% endif %} h-full_screen"
          style="--aspect-ratio: {{ video_local.aspect_ratio }}"
        >
          {% liquid
            assign preview_image = video_local.preview_image | image_url: width: 1100
            assign source = video_local.sources
            assign source_url = ''
            for s in source
              if s.format == 'mp4'
                assign source_url = s.url
                break
              endif
            endfor
          %}
          <div class="video-thumbnail banner__media overflow-hidden rounded w-full h-full">
            {%
              render 'responsive-image',
              type: 'product',
              image: preview_image,
              image_alt: section_st.video_alt_text | escape,
              motion: false,
              class: 'rounded-10 w-full h-full'
            %}
          </div>
          <template>
            <div class="video-foreground video-has-bg h-full_screen">
              <video
                class="video-with-text w-full"
                loop="true"
                src="{{ source_url }}"
                poster="{{ preview_image }}"
                playsinline="true"
                size="{{ sizes }}"
                muted
                autoplay
                title="{{ section_st.video_alt_text | escape }}"
              ></video>
            </div>
          </template>
        </video-local>
      {%- else -%}
        <div
          class="banner__media h-full_screen sticky placeholder absolute inset-0{% if section_width != "full-width" %} rounded{% endif %}"
          style="--aspect-ratio: 3/2"
        >
          {{ 'hero-apparel-3' | placeholder_svg_tag: 'placeholder-svg' }}
        </div>
      {%- endif -%}
      <div class="section__media-hero-content media__content relative w-full {{ desktop_content_position }} text-{{ section_st.text_alignment }}">
        <scrolling-effect class="banner__box max-w-100 px-custom">
          {% content_for 'blocks' %}
        </scrolling-effect>
      </div>
      <div
        class="overlay absolute inset-0 bg-dark{% if section_width != "full-width" %} rounded{% endif %}"
        style="--opacity: {{ overlay_opacity | times: 0.01 }}"
      ></div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.media-hero.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  },
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "heading"
    }
  ],
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.all.how_to_use"
    },
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "header",
      "content": "t:sections.video.name"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.all.image.label"
    },
    {
      "type": "video",
      "id": "video_local",
      "label": "t:sections.video-with-text-overlay.settings.video_local.label",
      "info": "t:sections.video-with-text-overlay.settings.video_local.info"
    },
    {
      "type": "text",
      "id": "video_alt_text",
      "label": "t:sections.video.settings.alt_description.label",
      "info": "t:sections.video.settings.alt_description.info",
      "default": "Video alt text"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "t:sections.video-with-text-overlay.settings.overlay_opacity",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.content_setting.label"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "default": "middle-left",
      "label": "t:sections.all.desktop_content_position.label",
      "info": "t:sections.all.desktop_content_position.info",
      "options": [
        {
          "group": "t:sections.all.desktop_content_position.group.top.label",
          "value": "top-left",
          "label": "t:sections.all.desktop_content_position.options__1.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.top.label",
          "value": "top-center",
          "label": "t:sections.all.desktop_content_position.options__2.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.top.label",
          "value": "top-right",
          "label": "t:sections.all.desktop_content_position.options__3.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.middle.label",
          "value": "middle-left",
          "label": "t:sections.all.desktop_content_position.options__4.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.middle.label",
          "value": "middle-center",
          "label": "t:sections.all.desktop_content_position.options__5.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.middle.label",
          "value": "middle-right",
          "label": "t:sections.all.desktop_content_position.options__6.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.bottom.label",
          "value": "bottom-left",
          "label": "t:sections.all.desktop_content_position.options__7.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.bottom.label",
          "value": "bottom-center",
          "label": "t:sections.all.desktop_content_position.options__8.label"
        },
        {
          "group": "t:sections.all.desktop_content_position.group.bottom.label",
          "value": "bottom-right",
          "label": "t:sections.all.desktop_content_position.options__9.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "text_alignment",
      "options": [
        {
          "value": "start",
          "label": "t:sections.all.text_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__2.label"
        },
        {
          "value": "end",
          "label": "t:sections.all.text_alignment.options__3.label"
        }
      ],
      "default": "start",
      "label": "t:sections.all.text_alignment.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 48
    }
  ],
  "presets": [
    {
      "name": "t:sections.media-hero.name",
      "blocks": [
        {
          "type": "heading"
        }
      ]
    }
  ]
}
{% endschema %}
