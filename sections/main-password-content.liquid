{{ 'password.css' | asset_url | stylesheet_tag }}
{{ 'page-password.css' | asset_url | stylesheet_tag }}
{% liquid
  assign section_st = section.settings
  assign banner_img = section_st.banner_img
  assign banner_position = section_st.banner_position
  assign content_width = section_st.content_width

  assign theme_st = settings
  assign logo_img = theme_st.logo
  assign logo_transparent = theme_st.logo_on_transparent

  if banner_img != blank
    assign show_banner = 'show-banner'
  endif
  assign banner_position_class = ''
  if banner_position == 'position-right'
    assign banner_position_class = ' row-reverse'
  endif
%}

<div class="main-password {{ banner_position_class }} p-30 justify-center">
  {% if banner_img != blank %}
    <div class="image_banner">
      <div class="bls__password-banner relative">
        {%- assign image_alt = banner_img.alt | default: 'accessibility.promotion_banner' | t -%}
        {% render 'responsive-image',
          type: 'other',
          image: banner_img,
          image_alt: image_alt,
          class: 'w-full',
          animate: 'zoom-out-small',
          motion: true
        %}
      </div>
    </div>
  {% endif %}
  <div class="main-content section-full flex content-center">
    <div class="max-w-custom" style="--max-width:{{ content_width }}%">
      <div class="color-{{ section.settings.color_scheme }} gradient">
        <div class="password-header flex justify-content-{{ section_st.text_align }}">
          <password-modal
            class="flex gap-20{% if logo_img == blank and logo_transparent == blank %} align-center{% endif %} password-header_logo"
            data-required="{{ 'customer.validate.password' | t }}"
            data-minlength="{{ 'customer.validate.min_password' | t }}"
          >
            <div class="password-logo">
              {%- render 'logo', section_st: section_st -%}
            </div>
            <div class="password-modal modal">
              <div class="modal__toggle" aria-haspopup="dialog">
                <div class="modal__toggle-open password-link link underlined-link text-center justify-center text-size">
                  {% render 'icon-padlock' %}
                  <div role="button" class="password-modal__content-heading" id="DialogHeading">
                    {{ 'general.password_page.login_password_button' | t }}
                  </div>
                </div>
              </div>
              <div
                class="modal__content"
                role="dialog"
                aria-labelledby="DialogHeading"
                aria-modal="true"
              >
                <div
                  class="password-modal__content"
                  tabindex="0"
                  data-title="{{ 'general.password_page.login_form_heading' | t }}"
                >
                  <h2 class="password-modal-title">{{ 'general.password_page.login_form_heading' | t }}</h2>
                  {%- form 'storefront_password', class: 'password-form-popup' -%}
                    <div class="field relative password-field{% if form.errors %} password-field--error{% endif %}">
                      <label for="Password" class="visually-hidden">
                        {{ 'customer.login_page.password' | t }}
                        <span class="required">*</span>
                      </label>
                      <input
                        type="password"
                        name="password"
                        id="Password"
                        class="field__input field__input-pass"
                        autocomplete="current-password"
                        {% if form.errors %}
                          aria-invalid="true"
                          aria-describedby="PasswordLoginForm-password-error"
                        {% endif %}
                        placeholder="{{ 'general.password_page.login_form_password_placeholder' | t }}"
                      >

                      {%- if form.errors -%}
                        <div
                          id="PasswordLoginForm-password-error error fs-small inline-flex align-start mb-20 w-full column"
                          role="status"
                        >
                          <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
                          <div class="error fs-small inline-flex align-start mb-20 w-full column">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                              <use href="#icon-error"></use>
                            </svg>
                            {{ 'general.password_page.login_form_error' | t -}}
                          </div>
                        </div>
                      {% endif %}
                    </div>
                    <button class="password-button btn btn-primary">
                      <span class="hidden-on-load transition-short">
                        {{- 'general.password_page.login_form_submit' | t -}}
                      </span>
                      {%- render 'loader' -%}
                    </button>
                  {%- endform -%}
                  <div class="password__footer-text text-center">{{ 'general.password_page.admin_link_html' | t }}</div>
                </div>
              </div>
            </div>
          </password-modal>
        </div>
        {%- if shop.password_message != blank -%}
          <div class="password-content">
            {{ shop.password_message }}
          </div>
        {% endif %}
      </div>

      <div
        class="row {{ banner_position_class }} banner-text--grid"
      >
        <div class="banner-text--content {{ show_banner }} text-{{ section_st.text_align }}">
          <div
            class="password-with-banner banner-text--content-inner"
          >
            {% content_for 'blocks' %}
          </div>
        </div>
      </div>
      <div></div>
    </div>
  </div>
</div>

<script type="module">
  import { setupFormValidation } from '{{ "formValidation.js" | asset_url }}';
  document.addEventListener('DOMContentLoaded', () => {
    setupFormValidation({
      formSelector: 'form.password-form-popup',
      fields: {
        password: (value) => {
          const invalidChars = /<.*?>|javascript:/i;
          return !value
            ? '{{ 'customer.validate.password' | t }}'
            : invalidChars.test(value)
            ? '{{ "customer.validate.invalid" | t }}'
            : '';
        },
      },
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-password-content.name",
  "tag": "section",
  "settings": [
    {
      "type": "image_picker",
      "id": "banner_img",
      "label": "t:sections.all.image.label"
    },
    {
      "type": "select",
      "id": "banner_position",
      "label": "t:sections.main-collection-banner.settings.image_position.label",
      "default": "position-right",
      "options": [
        {
          "value": "position-left",
          "label": "t:sections.main-collection-banner.settings.image_position.option__1"
        },
        {
          "value": "position-right",
          "label": "t:sections.main-collection-banner.settings.image_position.option__2"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.main-password-content.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "text_align",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.text_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.text_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.all.text_alignment.alignment"
    },
    {
      "type": "range",
      "id": "content_width",
      "label": "t:sections.main-password-content.settings.content_width.label",
      "min": 30,
      "max": 100,
      "step": 1,
      "unit": "%",
      "default": 100
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },

    {
      "type": "subheading"
    },
    {
      "type": "heading"
    },
    {
      "type": "description"
    },
    {
      "type": "_countdown_timer"
    },
    {
      "type": "_form_subscribe"
    }
  ]
}
{% endschema %}
