{%- liquid
  assign theme_st = settings
  assign section_st = section.settings
  assign color_swatch_trigger = theme_st.color_swatch_trigger
  assign first_3d_model = product.media | where: 'media_type', 'model' | first
-%}
<script type="module" src="{{ 'quickview-product.js' | asset_url }}"></script>
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
{%- if first_3d_model -%}
  {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
  <link
    id="ModelViewerStyle"
    rel="stylesheet"
    href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
    media="print"
    onload="this.media='all'"
  >
  <link
    id="ModelViewerOverride"
    rel="stylesheet"
    href="{{ 'component-model-viewer-ui.css' | asset_url }}"
    media="print"
    onload="this.media='all'"
  >
{% endif %}
<quickview-drawer
  id="QuickView-Drawer"
  class="modal pointer-none active-modal-js"
  style="--drawer-width: 82rem;--col-width: clamp(25%, 12vw, 300px);"
  tabindex="0"
  role="dialog"
>
  <modal-overlay class="modal-overlay pointer invisible transition"></modal-overlay>
  <div class="modal-inner invisible drawer drawer-right fixed right-0 z-15 inset-y-0 bg-white w-full">
    <button
      is="button-close-model"
      class="modal__close pointer btn-reset wh-40 inline-flex content-center absolute z-3 top-0 right-0"
      aria-label="Close"
    >
      <svg width="13" height="14" viewBox="0 0 13 14" fill="none">
        <path d="M0.282609 2.06784C0.0942029 1.89363 0 1.68314 0 1.43635C0 1.17504 0.0942029 0.950028 0.282609 0.761307C0.456522 0.587102 0.673913 0.5 0.934783 0.5C1.19565 0.5 1.41304 0.587102 1.58696 0.761307L6.5 5.68258L11.413 0.761307C11.587 0.587102 11.8043 0.5 12.0652 0.5C12.3261 0.5 12.5435 0.587102 12.7174 0.761307C12.9058 0.950028 13 1.17504 13 1.43635C13 1.68314 12.9058 1.89363 12.7174 2.06784L7.80435 6.98911L12.7174 11.9104C12.9058 12.0991 13 12.3241 13 12.5854C13 12.8322 12.9058 13.0427 12.7174 13.2169C12.5435 13.4056 12.3261 13.5 12.0652 13.5C11.8043 13.5 11.587 13.4056 11.413 13.2169L6.5 8.31742L1.58696 13.2169C1.41304 13.4056 1.19565 13.5 0.934783 13.5C0.673913 13.5 0.456522 13.4056 0.282609 13.2169C0.0942029 13.0427 0 12.8322 0 12.5854C0 12.3241 0.0942029 12.0991 0.282609 11.9104L5.19565 6.98911L0.282609 2.06784Z" fill="currentColor"></path>
      </svg>
    </button>
    <div class="drawer__body h-full overflow-y-auto custom-scrollbar">
      <div class="quickview-product h-full flex wrap gap-20 px-20">
        {% if product.media.size > 0 %}
          <div class="product-detail__media w-full col-md-w-custom py-20 slideIn-animate">
            {% liquid
              assign option_color_name = 'Color'
              if color_swatch_trigger != blank
                assign option_color_name = color_swatch_trigger | split: ','
              endif
              assign position = 1
              for opt in product.options_with_values
                for color_trigger_name in option_color_name
                  if opt.name == color_trigger_name
                    assign position = opt.position
                  endif
                endfor
              endfor
              assign default_color_option = ''
              if position == 1
                assign default_color_option = product.selected_or_first_available_variant.option1
              elsif position == 2
                assign default_color_option = product.selected_or_first_available_variant.option2
              elsif position == 3
                assign default_color_option = product.selected_or_first_available_variant.option3
              endif
              assign media = product.media
              if product.metafields.custom.use_variants_image_group != blank and product.metafields.custom.use_variants_image_group
                assign alt_tags = ''
                assign first = true
                for image in product.media
                  if image.alt != blank
                    assign exclude_image = false
                    for option in product.options_with_values
                      for value in option.values
                        if image.alt == value
                          assign exclude_image = true
                        endif
                      endfor
                    endfor
                    if exclude_image == false
                      if first
                        assign alt_tags = image.alt
                        assign first = false
                      else
                        assign alt_tags = alt_tags | append: ', ' | append: image.alt
                      endif
                    endif
                  endif
                endfor
                assign variant_media = product.media | where: 'alt', default_color_option
                assign alt_tags_list = alt_tags | split: ', '
                assign other_media = ''
                assign added_alts = ''
                for image in product.media
                  for alt_tag in alt_tags_list
                    if image.alt == alt_tag
                      if added_alts contains alt_tag
                      else
                        assign other_media = other_media | append: image.alt | append: ','
                        assign added_alts = added_alts | append: alt_tag | append: ','
                      endif
                    endif
                  endfor
                endfor
                assign combined_media = variant_media
                assign other_media_array = other_media | split: ','
                for alt_tag in other_media_array
                  assign media_to_add = product.media | where: 'alt', alt_tag
                  assign combined_media = combined_media | concat: media_to_add
                endfor
                assign media = combined_media
              endif
              if media.size == 0
                assign media = product.media
              endif
            %}
            {% render 'media-gallery',
              images: media,
              section_st: section_st,
              product: product,
              section: section,
              type_section: 'quickview'
            %}
          </div>
        {% endif %}
        <div class="product-detail__information w-full p-20{% if product.media.size > 0 %} col-md-remaining{% endif %}">
          <div class="sticky top-20">
            {% content_for 'blocks', closest.product: product %}
            <a
              {% if product == blank %}
                role="link" aria-disabled="true"
              {% else %}
                href="{{ product.url }}"
              {% endif %}
              aria-label="{{ 'products.product.view_full_details' | t }}"
              class="slideIn-animate mt-25 product-singe__view-all-button heading_weight heading-color inline-flex align-center gap-5 no-underline lh-normal"
            >
              {{ 'products.product.view_full_details' | t }}
              {% if settings.rtl %}
                <svg width="12" height="9" fill="none">
                  <path fill="#111" d="M4.717 8.783c.152.14.334.211.545.211.199 0 .369-.07.51-.21A.724.724 0 0 0 6 8.255a.688.688 0 0 0-.229-.527L2.555 4.494 5.77 1.277A.688.688 0 0 0 6 .75a.688.688 0 0 0-.229-.527.669.669 0 0 0-.51-.229.744.744 0 0 0-.544.229L.973 3.967a.744.744 0 0 0-.229.545c0 .199.076.369.229.51l3.744 3.761Zm5.256 0c.14.14.316.211.527.211.21 0 .387-.07.527-.21a.724.724 0 0 0 .229-.528.688.688 0 0 0-.229-.527L7.811 4.494l3.216-3.217a.688.688 0 0 0 .229-.527.688.688 0 0 0-.229-.527.688.688 0 0 0-.527-.229.688.688 0 0 0-.527.229L6.229 3.967A.744.744 0 0 0 6 4.512c0 .199.076.369.229.51l3.744 3.761Z"/>
                </svg>
              {% else %}
                <svg width="12" height="9" fill="none">
                  <path fill="currentColor" d="M7.283 8.783a.776.776 0 0 1-.545.211c-.199 0-.369-.07-.51-.21A.724.724 0 0 1 6 8.255c0-.211.076-.387.229-.527l3.216-3.235L6.23 1.277A.688.688 0 0 1 6 .75c0-.21.076-.387.229-.527a.669.669 0 0 1 .51-.229c.21 0 .392.076.544.229l3.744 3.744a.744.744 0 0 1 .229.545c0 .199-.076.369-.229.51L7.283 8.782Zm-5.256 0a.715.715 0 0 1-.527.211.715.715 0 0 1-.527-.21.724.724 0 0 1-.229-.528c0-.211.076-.387.229-.527l3.216-3.235L.973 1.277A.688.688 0 0 1 .744.75C.744.54.82.363.973.223A.688.688 0 0 1 1.5-.006c.21 0 .387.076.527.229l3.744 3.744A.744.744 0 0 1 6 4.512c0 .199-.076.369-.229.51L2.027 8.782Z"/>
                </svg>
              {% endif %}
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
  {%- unless product.has_only_default_variant -%}
    <script type="application/json" class="productVariantsQty">
      [
      {%- for variant in product.variants -%}
        {%- assign op = variant.option1 | replace: '"', '\"' -%}
        {%- liquid
            assign id = '"id":' | append: variant.id
            assign option = '"option":"' | append: op | append: '"'
            assign quantity = '"qty":' | append: variant.inventory_quantity
            assign available = '"available":' | append: variant.available
            assign mamagement = '"mamagement":"' | append: variant.inventory_management | append: '"'
        -%}
        { {{ id }},{{ option }},{{ quantity }},{{ available }},{{ mamagement }}}
        {%- unless forloop.last -%},{%- endunless forloop.last -%}
      {%- endfor -%}
      ]
    </script>
  {%- endunless -%}
  {%- if first_3d_model -%}
    <script type="application/json" id="ProductJSON-{{ product.id }}">
      {{ product.media | where: 'media_type', 'model' | json }}
    </script>
    <script src="{{ 'product-model.js' | asset_url }}" defer></script>
  {% endif %}
</quickview-drawer>
{% schema %}
{
  "name": "t:sections.quickview.name",
  "tag": "section",
  "class": "overlay-section overlay-quickbuy",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.quickview.settings.paragraph"
    },
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_autoplay.label",
      "info": "t:sections.main-product.settings.enable_video_autoplay.info"
    }
  ],
  "blocks": [
    { "type": "@app" },
    { "type": "_badges-product" },
    { "type": "_price-product" },
    { "type": "_description-product" },
    { "type": "_title-product" },
    { "type": "_rating-product" },
    { "type": "_text-product" },
    { "type": "_buy-buttons" },
    { "type": "_variant-picker" },
    { "type": "_inventory-status" },
    { "type": "_product-meta" },
    { "type": "_collapsible-row" },
    { "type": "_custom-liquid" },
    { "type": "_share-product" }
  ]
}
{% endschema %}
