{%- liquid
  assign theme_st = settings
  assign section_st = section.settings
  assign color_swatch_trigger = theme_st.color_swatch_trigger
-%}
<script type="module" src="{{ 'quickview-product.js' | asset_url }}"></script>
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
<script type="module" src="{{ 'media-gallery.js' | asset_url }}"></script>
<quickview-drawer
  id="Product-{{ section.id }}"
  data-section-id="{{ section.id }}"
  class="modal pointer-none active-modal-js"
  style="--drawer-width: 82rem;--col-width: clamp(25%, 12vw, 300px);"
>
  <modal-overlay class="modal-overlay pointer invisible transition z-15"></modal-overlay>
  <div class="modal-inner color-default transition-drawer drawer drawer-right fixed right-0 z-20 inset-y-0 bg-white w-full">
    <button
      is="button-close-model"
      class="modal__close pointer btn-reset wh-40 inline-flex content-center absolute z-3 top-0 right-0"
      aria-label="Close"
    >
      <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
        <use href="#icon-close" />
      </svg>
    </button>
    <div class="drawer__body h-full overflow-y-auto custom-scrollbar">
      <div class="quickview-product h-full flex wrap gap-20 px-20">
        {% if product.media.size > 0 %}
          <div class="product-detail__media w-full col-md-w-custom py-20">
            {% liquid
              assign option_color_name = 'Color'
              if color_swatch_trigger != blank
                assign option_color_name = color_swatch_trigger | split: ','
              endif
              assign position = 1
              for opt in product.options_with_values
                for color_trigger_name in option_color_name
                  if opt.name == color_trigger_name
                    assign position = opt.position
                  endif
                endfor
              endfor
              assign default_color_option = ''
              if position == 1
                assign default_color_option = product.selected_or_first_available_variant.option1
              elsif position == 2
                assign default_color_option = product.selected_or_first_available_variant.option2
              elsif position == 3
                assign default_color_option = product.selected_or_first_available_variant.option3
              endif
              assign media = product.media
              if product.metafields.custom.use_variants_image_group != blank and product.metafields.custom.use_variants_image_group
                assign alt_tags = ''
                assign first = true
                for image in product.media
                  if image.alt != blank
                    assign exclude_image = false
                    for option in product.options_with_values
                      for value in option.values
                        if image.alt == value
                          assign exclude_image = true
                        endif
                      endfor
                    endfor
                    if exclude_image == false
                      if first
                        assign alt_tags = image.alt
                        assign first = false
                      else
                        assign alt_tags = alt_tags | append: ', ' | append: image.alt
                      endif
                    endif
                  endif
                endfor
                assign variant_media = product.media | where: 'alt', default_color_option
                assign alt_tags_list = alt_tags | split: ', '
                assign other_media = ''
                assign added_alts = ''
                for image in product.media
                  for alt_tag in alt_tags_list
                    if image.alt == alt_tag
                      if added_alts contains alt_tag
                      else
                        assign other_media = other_media | append: image.alt | append: ','
                        assign added_alts = added_alts | append: alt_tag | append: ','
                      endif
                    endif
                  endfor
                endfor
                assign combined_media = variant_media
                assign other_media_array = other_media | split: ','
                for alt_tag in other_media_array
                  assign media_to_add = product.media | where: 'alt', alt_tag
                  assign combined_media = combined_media | concat: media_to_add
                endfor
                assign media = combined_media
              endif
              if media.size == 0
                assign media = product.media
              endif
            %}
            {% render 'media-gallery',
              images: media,
              section_st: section_st,
              product: product,
              section: section,
              type_section: 'quick_view'
            %}
          </div>
        {% endif %}
        <div class="product-detail__information w-full p-20{% if product.media.size > 0 %} col-md-remaining{% endif %}">
          <div class="sticky top-20">
            {% content_for 'blocks', closest.product: product %}
            <a
              {% if product == blank %}
                role="link" aria-disabled="true"
              {% else %}
                href="{{ product.url }}"
              {% endif %}
              aria-label="{{ 'products.product.view_full_details' | t }}"
              class="slideIn-animate mt-25 product-singe__view-all-button heading_weight heading-color inline-flex align-center gap-5 no-underline lh-normal"
            >
              {{ 'products.product.view_full_details' | t }}
              {% if settings.rtl %}
                <svg width="12" height="9" fill="none">
                  <path fill="#111" d="M4.717 8.783c.152.14.334.211.545.211.199 0 .369-.07.51-.21A.724.724 0 0 0 6 8.255a.688.688 0 0 0-.229-.527L2.555 4.494 5.77 1.277A.688.688 0 0 0 6 .75a.688.688 0 0 0-.229-.527.669.669 0 0 0-.51-.229.744.744 0 0 0-.544.229L.973 3.967a.744.744 0 0 0-.229.545c0 .199.076.369.229.51l3.744 3.761Zm5.256 0c.14.14.316.211.527.211.21 0 .387-.07.527-.21a.724.724 0 0 0 .229-.528.688.688 0 0 0-.229-.527L7.811 4.494l3.216-3.217a.688.688 0 0 0 .229-.527.688.688 0 0 0-.229-.527.688.688 0 0 0-.527-.229.688.688 0 0 0-.527.229L6.229 3.967A.744.744 0 0 0 6 4.512c0 .199.076.369.229.51l3.744 3.761Z"/>
                </svg>
              {% else %}
                <svg width="12" height="9" fill="none">
                  <path fill="currentColor" d="M7.283 8.783a.776.776 0 0 1-.545.211c-.199 0-.369-.07-.51-.21A.724.724 0 0 1 6 8.255c0-.211.076-.387.229-.527l3.216-3.235L6.23 1.277A.688.688 0 0 1 6 .75c0-.21.076-.387.229-.527a.669.669 0 0 1 .51-.229c.21 0 .392.076.544.229l3.744 3.744a.744.744 0 0 1 .229.545c0 .199-.076.369-.229.51L7.283 8.782Zm-5.256 0a.715.715 0 0 1-.527.211.715.715 0 0 1-.527-.21.724.724 0 0 1-.229-.528c0-.211.076-.387.229-.527l3.216-3.235L.973 1.277A.688.688 0 0 1 .744.75C.744.54.82.363.973.223A.688.688 0 0 1 1.5-.006c.21 0 .387.076.527.229l3.744 3.744A.744.744 0 0 1 6 4.512c0 .199-.076.369-.229.51L2.027 8.782Z"/>
                </svg>
              {% endif %}
            </a>
          </div>
        </div>
      </div>
    </div>
    {%- unless product.has_only_default_variant -%}
      <script type="application/json" class="productVariantsQty">
        [
        {%- for variant in product.variants -%}
          {%- assign op = variant.option1 | replace: '"', '\"' -%}
          {%- liquid
              assign id = '"id":' | append: variant.id
              assign option = '"option":"' | append: op | append: '"'
              assign quantity = '"qty":' | append: variant.inventory_quantity
              assign available = '"available":' | append: variant.available
              assign mamagement = '"mamagement":"' | append: variant.inventory_management | append: '"'
          -%}
          { {{ id }},{{ option }},{{ quantity }},{{ available }},{{ mamagement }}}
          {%- unless forloop.last -%},{%- endunless forloop.last -%}
        {%- endfor -%}
        ]
      </script>
    {%- endunless -%}
  </div>
</quickview-drawer>
{% schema %}
{
  "name": "t:sections.quickview.name",
  "tag": "section",
  "class": "overlay-section overlay-quickbuy",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.quickview.settings.paragraph"
    },
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "default": true,
      "label": "t:sections.main-product.settings.enable_image_zoom.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_autoplay",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_autoplay.label",
      "info": "t:sections.main-product.settings.enable_video_autoplay.info"
    }
  ],
  "blocks": [
    { "type": "@app" },
    { "type": "_badges-product" },
    { "type": "_price-product" },
    { "type": "_description-product" },
    { "type": "_title-product" },
    { "type": "_rating-product" },
    { "type": "_text-product" },
    { "type": "_buy-buttons" },
    { "type": "_variant-picker" },
    { "type": "_inventory-status" },
    { "type": "_product-meta" },
    { "type": "_collapsible-row" },
    { "type": "_custom-liquid" },
    { "type": "_share-product" },
    { "type": "_highlights-product" },
    { "type": "_key-features-product" },
    { "type": "_promotion-alert-product" },
    { "type": "_icon-with-text-product" },
    { "type": "_ask-question-product" },
    { "type": "_media-lightbox-product" },
    { "type": "_promotion-countdown-product" }
  ]
}
{% endschema %}
