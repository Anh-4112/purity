{% liquid
  assign theme_st = settings
  assign section_st = section.settings
  assign scroll_animation = theme_st.scroll_animation
  assign section_width = ''
  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width'
  else
    assign section_width = 'fluid_container'
  endif
  assign text_alignment = section_st.text_alignment
  assign button_label = section_st.button_label
  assign heading_size = section_st.heading_size
  assign header_size = ''
  if heading_size == 'small'
    assign header_size = 'h3'
  elsif heading_size == 'large'
    assign header_size = 'h1'
  endif
%}
{%- capture style -%}
  --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};
  
{%- endcapture -%}
<div
  class="section section__newsletter color-{{ section_st.color_scheme }} gradient{% if section_st.show_divider %} border-top{% endif %}"
  style="{{ style | strip | strip_newlines }}"
>
  <div class="{{ section_width }}">
    {%- if section_st.heading != blank or section_st.description != blank -%}
      {% assign animate_delay = 25 %}
      <div class="section-header text-{{ text_alignment }}">
        {%- if section_st.heading != blank -%}
          {%- if scroll_animation -%}
            <motion-effect
              data-animate="fade-up"
              data-animate-delay="{{ animate_delay }}"
              class="block"
            >
          {%- endif -%}
          <h2
            class="section-heading {{ header_size }}"
          >
            {{ section_st.heading }}
          </h2>
          {%- if scroll_animation -%}
            </motion-effect>
          {%- endif -%}
        {%- endif -%}
        {%- if section_st.description != blank -%}
          {% assign animate_delay = animate_delay | plus: 50 %}
          {%- if scroll_animation -%}
            <motion-effect
              data-animate="fade-up"
              data-animate-delay="{{ animate_delay }}"
              class="block"
            >
          {%- endif -%}
          <div
            class="section-description mt-15 prose"
          >
            {{ section_st.description }}
          </div>
          {%- if scroll_animation -%}
            </motion-effect>
          {%- endif -%}
        {%- endif -%}
      </div>
    {%- endif -%}
    <div
      class="newsletter__form-container flex column text-{{ text_alignment }} justify-content-{{ text_alignment }}"
    >
      {%- assign newsletter_id = 'NewsletterForm--' | append: section.id -%}
      {%- form 'customer', id: newsletter_id, class: 'newsletter__form flex column' -%}
        <input type="hidden" name="contact[tags]" value="newsletter">
        <div class="field relative field relative w-full flex wrap gap-10 justify-content-{{ text_alignment }}">
          <div class="flex wrap gap-10">
            <input
              id="NewsletterForm-email--{{ section.id }}"
              type="email"
              required
              name="contact[email]"
              autocomplete="email"
              aria-required="true"
              autocorrect="off"
              autocapitalize="off"
              value="{% if customer %}{{ customer.email }}{% endif %}"
              placeholder="{% if section_st.email_placeholder != blank %}{{section_st.email_placeholder}}{% else %}{{ 'newsletter.label' | t }}{% endif %}"
              class="newsletter__input grow-1"
              {% if form.errors %}
                aria-invalid="true"
                aria-describedby="Newsletter-error--{{ section.id }}"
              {% elsif form.posted_successfully? %}
                aria-describedby="Newsletter-success--{{ section.id }}"
              {% endif %}
              pattern=".+\.[a-zA-Z]{2,6}"
            >
            <label class="visually-hidden" for="NewsletterForm-email--{{ section.id }}">
              {{ 'newsletter.label' | t }}
            </label>
            <button
              class="btn btn-primary newsletter__button"
              aria-label="{%- if button_label != blank -%}{{ button_label }}{%- else -%}{{ 'subscribe.button_label' | t }}{% endif %}"
            >
              <span class="hidden-on-load transition-short">
                {%- if button_label != blank -%}
                  {{ button_label }}
                {%- else -%}
                  {{ 'newsletter.button_label' | t }}
                {% endif -%}
              </span>
              {%- render 'loader' -%}
            </button>
          </div>
        </div>
        {%- if form.errors -%}
          <small
            class="newsletter__message newsletter__message--error error mt-10"
            id="Newsletter-error--{{ section.id }}"
          >
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" class="flex-auto w-20">
              <use href="#icon-error"></use>
            </svg>
            {{- form.errors.translated_fields.email | capitalize }}
            {{ form.errors.messages.email -}}
          </small>
        {%- endif -%}
        {%- if form.posted_successfully? -%}
          <div
            class="newsletter-form__message newsletter-form__message--success success form__message fs-small inline-flex gap-10 mt-10 align-self-{{ text_alignment }}"
            id="Newsletter-success--{{ section.id }}"
            tabindex="-1"
          >
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" class="flex-auto w-20">
              <use href="#icon-success"></use>
            </svg>
            {{- 'newsletter.success' | t }}
          </div>
        {%- endif -%}
      {%- endform -%}
    </div>
  </div>
</div>
<script type="module">
  import { setupFormValidation } from '{{ "form-validation.js" | asset_url }}';
  document.addEventListener('DOMContentLoaded', () => {
    setupFormValidation({
      formSelector: 'form.newsletter__form',
    });
  });
</script>
{% schema %}
{
  "name": "t:sections.newsletter.name",
  "tag": "section",
  "class": "section section-newsletter",
  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  },
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.newsletter.how_to_use"
    },
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "header",
      "content": "t:sections.all.content_header.label"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.all.content_setting.heading.label",
      "default": "Newsletter"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.all.content_setting.description.label",
      "default": "<p>Add a short description for this section.</p>"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.all.content_header.heading_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.all.content_header.heading_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.all.content_header.heading_size.options__3.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.all.content_header.heading_size.label"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.text_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.text_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.all.text_alignment.alignment"
    },
    {
      "type": "header",
      "content": "t:sections.newsletter.settings.header.heading_setting"
    },
    {
      "type": "text",
      "id": "email_placeholder",
      "label": "t:sections.all.newsletter_setting.email_placeholder",
      "default": "Enter your email"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "t:sections.all.content_setting.button_label.label",
      "default": "Subscribe"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 48
    },
    {
      "type": "header",
      "content": "t:sections.all.divider.section_divider_heading"
    },
    {
      "type": "checkbox",
      "id": "show_divider",
      "label": "t:sections.all.divider.show_divider",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "t:sections.newsletter.name"
    }
  ]
}
{% endschema %}
