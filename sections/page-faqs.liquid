{%- liquid
  assign section_st = section.settings
  assign show_faqs_message = section_st.show_faqs_message
  assign desktop_content_position = section_st.desktop_content_position

  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width px-20'
  else
    assign section_width = 'fluid_container'
  endif
-%}
{%- capture style -%}
  --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};
{%- endcapture -%}

<section
  class="section section__faq color-{{ section_st.color_scheme }} gradient"
  style="{{ style | strip | strip_newlines }}"
>
  <div class="{{ section_width }}">
    <div
      class="section__faqs-content w-full{% if show_faqs_message %} flex gap{% endif %}{% if desktop_content_position == 'right' %} flex-1025-row-reverse{% endif %}"
      style="--gap: clamp(3rem, 5vw, 10rem);--gap: clamp(3rem, 5vw, 10rem);--col-width: 30%;"
    >
      {% if show_faqs_message %}
        <div class="contact_form-field w-full col-1025-w-custom">
          {%- if section_st.heading != blank or section_st.description != blank or section_st.subheading != blank -%}
            <div
              class="section-header text-{{ section_st.text_alignment }}"
            >
              {%- if section_st.subheading != blank -%}
                <div class="section-subheading h7 mb-5 mb-md-10 subheading_weight">
                  {{ section_st.subheading }}
                </div>
              {%- endif -%}
              {%- if section_st.heading != blank -%}
                <h2 class="section-heading">{{ section_st.heading }}</h2>
              {%- endif -%}
              {%- if section_st.description != blank -%}
                <div
                  class="short-des"
                >
                  {{ section_st.description }}
                </div>
              {%- endif -%}
            </div>
          {%- endif -%}
          {%- form 'contact', id: 'contact_faq', class: 'isolate field', novalidate: 'novalidate' -%}
            {%- if form.posted_successfully? -%}
              <div class="form-status form-status form__message success" tabindex="-1" autofocus>
                <svg width="18" height="18" viewBox="0 0 18 18" fill="none">
                  <use href="#icon-success"></use>
                </svg>
                {{ 'templates.contact.form.post_success' | t }}
              </div>
            {%- elsif form.errors -%}
              <div class="form__message error">
                <div
                  class="inline-flex align-center form-status"
                  role="alert"
                  tabindex="-1"
                  autofocus
                >
                  <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                    <use href="#icon-error"></use>
                  </svg>
                  {{ 'templates.contact.form.error_heading' | t }}
                </div>
              </div>
              <ul role="list">
                <li>
                  <a
                    href="#ContactForm-email"
                    class="color-inherit"
                    aria-label=" {{ form.errors.translated_fields.email }}"
                  >
                    {{ form.errors.translated_fields.email | capitalize }}
                    {{ form.errors.messages.email }}
                  </a>
                </li>
              </ul>
            {%- endif -%}
            <div
              class="contact__fields field grid-cols"
            >
              <div
                class="field relative w-full flex wrap transition"
              >
                <input
                  class="field__input w-full"
                  autocomplete="name"
                  type="text"
                  id="ContactFormName-{{ section.id }}"
                  name="contact[name]"
                  value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
                  placeholder="{{ section_st.name }}*"
                >
                <label class="field__label visually-hidden" for="ContactFormName-{{ section.id }}">
                  {{ 'templates.contact.form.name' | t -}}
                </label>
              </div>
              <div class="field relative w-full flex wrap transition field--with-error">
                <input
                  autocomplete="email"
                  type="email"
                  id="ContactFormEmail-{{ section.id }}"
                  class="field__input w-full"
                  name="contact[email]"
                  spellcheck="false"
                  autocapitalize="off"
                  autocorrect="off"
                  value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
                  aria-required="true"
                  {% if form.errors contains 'email' %}
                    aria-invalid="true"
                    aria-describedby="ContactForm-email-error"
                  {% endif %}
                  placeholder="{{ section_st.email_placeholder }}*"
                  required
                >
                <label class="field__label visually-hidden" for="ContactFormEmail-{{ section.id }}">
                  {{ 'templates.contact.form.email' | t }}
                  <span class="required">*</span></label
                >
                {%- if form.errors contains 'email' -%}
                  <small class="contact__field-error" id="ContactForm-email-error">
                    <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
                    <span class="form__message error">
                      {%- render 'icon-error' -%}
                      {{- form.errors.translated_fields.email | capitalize }}
                      {{ form.errors.messages.email -}}
                    </span>
                  </small>
                {%- endif -%}
              </div>
            </div>
            <div
              class="field relative w-full flex wrap transition"
            >
              <textarea
                rows="10"
                id="ContactFormMessage-{{ section.id }}"
                class="text-area field__input w-full"
                aria-required="true"
                aria-invalid="true"
                required
                name="contact[body]"
                placeholder="{{ section_st.message }}*"
                required
              >
          {{- form.body -}}
          </textarea>
              <label class="form__label field__label visually-hidden" for="ContactFormMessage-{{ section.id }}">
                {{ 'templates.contact.form.comment' | t }}
                <span class="required">*</span>
              </label>
            </div>
            <div
              class="contact__button"
            >
              <button type="submit" class="btn btn-primary w-full relative">
                <span class="hidden-on-load transition-short">{{ section_st.button_label }}</span>
                {%- render 'loader' -%}
              </button>
            </div>
          {%- endform -%}
        </div>
      {% endif %}
      <div class="faq-container w-full gap-60 flex column{% if show_faqs_message %} col-1025-remaining{% endif %}">
        {% content_for 'blocks' %}
      </div>
    </div>
  </div>
</section>
<script type="module">
  import { setupFormValidation } from '{{ "formValidation.js" | asset_url }}';

  document.addEventListener('DOMContentLoaded', () => {
    setupFormValidation({
      formSelector: 'form#contact_faq',
      fields: {
        'contact[name]': (value) => {
          const invalidChars = /<.*?>|javascript:/i;
          return !value
            ? '{{ "customer.validate.name" | t }}'
            : invalidChars.test(value)
            ? '{{ "customer.validate.invalid" | t }}'
            : '';
        },
        'contact[email]': (value) => {
          const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
          return !value
            ? '{{ "customer.validate.email" | t }}'
            : !emailRegex.test(value)
            ? '{{ "customer.validate.email_invalid" | t }}'
            : '';
        },
        'contact[subject]': (value) => (!value ? '{{ "customer.validate.subject" | t }}' : ''),
        'contact[body]': (value) => {
          const invalidChars = /<.*?>|javascript:/i;
          return !value
            ? '{{ "customer.validate.message" | t }}'
            : invalidChars.test(value)
            ? '{{ "customer.validate.invalid" | t }}'
            : '';
        },
      },
    });
  });
</script>
{% schema %}
{
  "name": "t:sections.faq.main-faq",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "group-faq-page"
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "checkbox",
      "id": "open_all_question",
      "label": "t:sections.faq.settings.open_all_question",
      "default": false
    },
    {
      "type": "header",
      "content": "t:sections.faq.heading.content"
    },
    {
      "type": "checkbox",
      "id": "show_faqs_message",
      "label": "t:sections.faq.settings.show_faqs_message",
      "default": true
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.image.desktop_position.left"
        },
        {
          "value": "right",
          "label": "t:sections.all.image.desktop_position.right"
        }
      ],
      "default": "left",
      "label": "t:sections.all.desktop_content_position.label",
      "info": "t:sections.all.desktop_content_position.info_2"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "t:sections.all.content_setting.heading.label",
      "default": "Contact form"
    },
    {
      "type": "text",
      "id": "subheading",
      "default": "Subheading text",
      "label": "t:sections.all.content_setting.subheading.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.all.content_setting.description.label",
      "default": "<p>Add a short description for this section.</p>"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.text_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.all.text_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.text_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.all.text_alignment.alignment"
    },
    {
      "type": "header",
      "content": "t:sections.contact-form.name"
    },
    {
      "type": "text",
      "id": "name",
      "label": "t:sections.contact-form.settings.name",
      "default": "Your name"
    },
    {
      "type": "text",
      "id": "email_placeholder",
      "label": "t:sections.contact-form.settings.email_placeholder",
      "default": "Enter your email..."
    },
    {
      "type": "text",
      "id": "message",
      "label": "t:sections.contact-form.settings.message",
      "default": "Your comment"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "t:sections.all.content_setting.button_label.label",
      "default": "Send message"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 48
    }
  ]
}
{% endschema %}
