{%- liquid
  assign section_st = section.settings
  assign theme_st = settings
  if section_st.section_width == 'fix_width'
    assign section_width = 'container'
  elsif section_st.section_width == 'full_width'
    assign section_width = 'full-width'
  else
    assign section_width = 'full-width-gap'
  endif

  assign text = section_st.text
  assign text_size = section_st.text_size

  assign text_content_size = ''
  if text_size == 'small'
    assign text_content_size = 'h7'
  elsif text_size == 'large'
    assign text_content_size = 'h5'
  else
    assign text_content_size = 'h6'
  endif

  assign column_gap_slide = 'gap-0'
  if section_st.column_gap == 'large'
    assign column_gap_slide = 'gap-30 gap-md-50'
  elsif section_st.column_gap == 'medium'
    assign column_gap_slide = 'gap-20 gap-md-30'
  elsif section_st.column_gap == 'small'
    assign column_gap_slide = 'gap-10 gap-md-20'
  endif
-%}
{%- capture style -%}
    --section-pt: {{ section_st.padding_top }}; --section-pb: {{ section_st.padding_bottom }};
{%- endcapture -%}
{%- capture sizes -%}
  {% if section_st.full_width -%}
    100vw
  {%- else -%}
    (min-width: {{ theme_st.page_width }}px) {{ theme_st.page_width | minus: 100 }}px, (min-width: 750px)
    calc(100vw - 10rem), 100vw
  {%- endif %}
{%- endcapture -%}
{% style %}
  inspiration-showcase {
    display: flex;
  }
  .inspiration-showcase__block {
    width: 10rem;
  }
  .inspiration-showcase__block.active {
    width: 18rem;
  }
    @media screen and (max-width: 767.98px) {
    .inspiration-showcase__block {
      width: 7.6rem;
    }
    .inspiration-showcase__block.active {
      width: 15rem;
    }
  }
{% endstyle %}
<div
  class="section section-case color-{{ section_st.color_scheme }} gradient"
  style="{{ style | strip | strip_newlines }}"
>
  <div class="{{ section_width }}">
    <inspiration-showcase class="content-center {{ column_gap_slide }} mb-30">
      {%- for block in section.blocks -%}
        {%- liquid
          assign block_st = block.settings
          assign media_type = section_st.media_type
          assign media = block_st.image
          assign video = block_st.video
          assign image_alt = media.alt
          if image_alt == blank
            assign image_alt = 'general.image.image_alt_default' | t
          endif
          assign middle_index = section.blocks.size | divided_by: 2 | floor
          assign is_middle = false
          if forloop.index0 == middle_index
            assign is_middle = true
          endif

          if is_middle
            assign active_class = 'active'
          else
            assign active_class = ''
          endif
          assign image_ratio = section_st.image_ratio

          assign ratio = '3/4'
          if media_type != 'rounded'
            if image_ratio != 'adapt'
              case image_ratio
                when 'square'
                  assign ratio = '1/1'
                when 'landscape'
                  assign ratio = '4/3'
                when 'portrait'
                  assign ratio = '3/4'
              endcase
            else
              if video != blank
                assign ratio = video.aspect_ratio
              elsif media != blank
                assign ratio = media.aspect_ratio
              endif
            endif
          else
            assign ratio = '1/1'
            assign media_type = 'rounded-50'
          endif
        -%}
        <div class="inspiration-showcase__block {{ active_class }}">
          <div
            class="inspiration-showcase__media {{ media_type }} rounded video-section"
            style="--aspect-ratio: {{ ratio }};{% if section_st.media_type == 'oval' %}--img-rounded: 100px;{% endif %}"
          >
            {%- if video != blank -%}
              {%- liquid
                assign source = video.sources
                assign source_url = ''
                for s in source
                  if s.format == 'mp4'
                    assign source_url = s.url
                    break
                  endif
                endfor
                assign video_poster = video.preview_image | image_url: width: 1100
              -%}
              <video-local>
                <video
                  loop="true"
                  data-src="{{ source_url }}"
                  poster="{{ video_poster }}"
                  playsinline="true"
                  autoplay
                  muted
                  size="{{ sizes }}"
                ></video>
              </video-local>
            {%- elsif media != blank -%}
              {% render 'responsive-image',
                type: 'banner',
                container: section_st.section_width,
                image: media,
                image_alt: image_alt,
                padding: column_gap_slide,
                column: section.blocks.size
              %}
            {%- else -%}
              {% render 'placeholder-render', type: 'blog' %}
            {%- endif -%}
          </div>
        </div>
      {%- endfor -%}
    </inspiration-showcase>
    <div class="inspiration-showcase__text text-center">
      <div class="text-content {{ text_content_size }}">
        {{ text }}
      </div>
    </div>
  </div>
</div>
{% schema %}
{
  "name": "t:sections.inspiration-showcase.name",
  "tag": "section",
  "class": "section section-inspiration-showcase",
  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  },
  "max_blocks": 5,
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.general"
    },
    {
      "type": "select",
      "id": "section_width",
      "options": [
        {
          "value": "fix_width",
          "label": "t:sections.all.layout.fix_width"
        },
        {
          "value": "stretch_width",
          "label": "t:sections.all.layout.stretch_width"
        },
        {
          "value": "full_width",
          "label": "t:sections.all.layout.full_width"
        }
      ],
      "default": "fix_width",
      "label": "t:sections.all.layout.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "textarea",
      "id": "text",
      "label": "t:sections.all.text.label",
      "default": "Add a short description for this section."
    },
    {
      "type": "select",
      "id": "text_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.all.content_header.heading_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.all.content_header.heading_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.all.content_header.heading_size.options__3.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.scrolling_text.settings.text_size.label"
    },
    {
      "type": "header",
      "content": "t:sections.inspiration-showcase.blocks.settings.header"
    },
    {
      "type": "select",
      "id": "media_type",
      "options": [
        {
          "value": "default",
          "label": "t:sections.inspiration-showcase.blocks.settings.media_style.options__3.label"
        },
        {
          "value": "rounded",
          "label": "t:sections.inspiration-showcase.blocks.settings.media_style.options__1.label"
        },
        {
          "value": "oval",
          "label": "t:sections.inspiration-showcase.blocks.settings.media_style.options__2.label"
        }
      ],
      "default": "oval",
      "label": "t:sections.inspiration-showcase.blocks.settings.media_style.label"
    },
    {
      "type": "select",
      "id": "column_gap",
      "options": [
        {
          "value": "no_gap",
          "label": "t:sections.all.padding.column_gap.no_gap"
        },
        {
          "value": "small",
          "label": "t:sections.all.padding.column_gap.small"
        },
        {
          "value": "medium",
          "label": "t:sections.all.padding.column_gap.medium"
        },
        {
          "value": "large",
          "label": "t:sections.all.padding.column_gap.large"
        }
      ],
      "default": "medium",
      "label": "t:sections.all.padding.column_gap.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.all.image.aspect_ratio.adapt"
        },
        {
          "value": "square",
          "label": "t:sections.all.image.aspect_ratio.options__1"
        },
        {
          "value": "portrait",
          "label": "t:sections.all.image.aspect_ratio.options__2"
        },
        {
          "value": "landscape",
          "label": "t:sections.all.image.aspect_ratio.options__3"
        }
      ],
      "default": "adapt",
      "label": "t:sections.all.image.aspect_ratio.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 48
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 48
    }
  ],
  "blocks": [
    {
      "type": "media",
      "name": "t:sections.inspiration-showcase.blocks.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.all.image.label"
        },
        {
          "type": "video",
          "id": "video",
          "label": "t:sections.all.video.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.inspiration-showcase.name",
      "blocks": [
        {
          "type": "media"
        },
        {
          "type": "media"
        },
        {
          "type": "media"
        }
      ]
    }
  ]
}
{% endschema %}
