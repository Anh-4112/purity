{% liquid
  assign section_st = section.settings
  assign block_st = block.settings

  assign radius_image_class = 'rounded'
  assign padding_content_class = 'rounded px-20 py-20 py-1025-40'
  assign column_gap = 0
  if section_st.column_gap_block == 'large'
    assign column_gap = 30
  elsif section_st.column_gap_block == 'medium'
    assign column_gap = 20
  elsif section_st.column_gap_block == 'small'
    assign column_gap = 10
  endif
%}
{% style %}
  @media screen and (min-width: 767.98px) {
    .offer_pop_up .block__buttons a {
    min-width: 16rem;
    width: auto;
  }
  }
  .offer_pop_up .block__highlight_text {
    font-weight: 600;
  }
{% endstyle %}
<div
  class="color-{{ block_st.color_scheme }} gradient block__image-with-text-offer"
  style="--col-width: {{ block_st.desktop_image_width }}%;"
>
  <div
    class="flex gap{% if block_st.image_desktop_position == 'right' %} row-reverse-md{% endif %}"
    style="--gap: {{column_gap}}px;"
  >
    <div class="image-with-text__media-item w-50-percent col-1025-w-custom">
      <div
        class="image-with-text__media banner__media {{ radius_image_class }} h-full"
        {% if block_st.image != blank %}
          style="--aspect-ratio: {{ block_st.image.aspect_ratio }}";
        {% else %}
          style="--aspect-ratio: 16/9";
        {% endif %}
      >
        {%- liquid
          assign alt = 'general.image.image_alt_default' | t
          if block_st.image.alt
            assign alt = block_st.image.alt | escape
          endif
        -%}
        {%- if block_st.image != blank -%}
          {% render 'responsive-image',
            type: 'other',
            container: 'full-width',
            image: block_st.image,
            image_alt: alt
          %}
        {% else %}
          {% render 'placeholder-render', type: 'collection-6', class: 'img-placeholder h-full w-full' %}
        {% endif %}
      </div>
    </div>
    <div class="w-50-percent col-1025-remaining flex text-{{ section_st.content_alignment }}">
      <div
        class="offer_pop_up image-with-text__wrapper w-full flex bg-custom {{ radius_image_class }}"
        style="--bg-color-custom: {{ block_st.background_color }};"
      >
        <div class="image-with-text__text-item-inner w-full align-self-{{ section_st.desktop_vertical_alignment }} {{ padding_content_class }}"
        >
          {% content_for 'blocks' %}
        </div>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.image-with-text.name",
  "class": "swiper-slide",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "heading"
    },
    {
      "type": "highlight-text"
    },
    {
      "type": "subheading"
    },
    {
      "type": "description"
    },
    {
      "type": "button"
    }
  ],
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.info",
      "default": "default-color-scheme"
    },
    {
      "type": "header",
      "content": "t:sections.all.image.label"
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.all.image.label"
    },
    {
      "type": "range",
      "id": "desktop_image_width",
      "min": 35,
      "max": 70,
      "step": 1,
      "unit": "%",
      "default": 50,
      "label": "t:sections.all.image.width",
      "info": "t:sections.all.image.info_width"
    },
    {
      "type": "select",
      "id": "image_desktop_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.image.desktop_position.left"
        },
        {
          "value": "right",
          "label": "t:sections.all.image.desktop_position.right"
        }
      ],
      "default": "left",
      "label": "t:sections.all.image.desktop_position.label",
      "info": "t:sections.all.image.desktop_position.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.content_setting.label"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "t:sections.image-with-text.settings.background_color"
    }
  ],
  "presets": [
    {
      "name": "t:sections.image-with-text.name",
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "description"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
